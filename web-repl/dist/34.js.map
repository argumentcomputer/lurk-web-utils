{"version":3,"file":"34.js","mappings":"4BACIA,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,ECxBxBN,EAAoBQ,EAAI,CAACJ,EAASK,KACjC,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,EAAEF,EAAYC,KAASV,EAAoBW,EAAEP,EAASM,IAC5EE,OAAOC,eAAeT,EAASM,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDV,EAAoBgB,EAAI,CAAC,EAGzBhB,EAAoBiB,EAAKC,GACjBC,QAAQC,IAAIR,OAAOS,KAAKrB,EAAoBgB,GAAGM,QAAO,CAACC,EAAUb,KACvEV,EAAoBgB,EAAEN,GAAKQ,EAASK,GAC7BA,IACL,KCNJvB,EAAoBwB,EAAKN,GAEZA,EAAU,MCHvBlB,EAAoByB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAGhB,CAFE,MAAOX,GACR,GAAsB,iBAAXY,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB7B,EAAoBW,EAAI,CAACmB,EAAKC,IAAUnB,OAAOoB,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF/B,EAAoBmC,EAAK/B,IACH,oBAAXgC,QAA0BA,OAAOC,aAC1CzB,OAAOC,eAAeT,EAASgC,OAAOC,YAAa,CAAEC,MAAO,WAE7D1B,OAAOC,eAAeT,EAAS,aAAc,CAAEkC,OAAO,GAAO,E,MCL9D,IAAIC,EACAvC,EAAoByB,EAAEe,gBAAeD,EAAYvC,EAAoByB,EAAEgB,SAAW,IACtF,IAAIC,EAAW1C,EAAoByB,EAAEiB,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UACzCD,EAAQE,SAAQR,EAAYM,EAAQA,EAAQE,OAAS,GAAGH,IAC5D,CAID,IAAKL,EAAW,MAAM,IAAIS,MAAM,yDAChCT,EAAYA,EAAUU,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFjD,EAAoBkD,EAAIX,C,WCfxBvC,EAAoBmD,EAAIC,KAAKX,SAAW,GAIxC,IAAIY,EAAkB,CACrB,GAAI,GAgBLrD,EAAoBgB,EAAEsC,EAAI,CAACpC,EAASK,KAE/B8B,EAAgBnC,IAElBsB,cAAcxC,EAAoBkD,EAAIlD,EAAoBwB,EAAEN,GAE9D,EAGD,IAAIqC,EAAqBH,KAAgC,0BAAIA,KAAgC,2BAAK,GAC9FI,EAA6BD,EAAmBE,KAAKC,KAAKH,GAC9DA,EAAmBE,KAvBCE,IACnB,IAAKC,EAAUC,EAAaC,GAAWH,EACvC,IAAI,IAAI1D,KAAY4D,EAChB7D,EAAoBW,EAAEkD,EAAa5D,KACrCD,EAAoBO,EAAEN,GAAY4D,EAAY5D,IAIhD,IADG6D,GAASA,EAAQ9D,GACd4D,EAASb,QACdM,EAAgBO,EAASG,OAAS,EACnCP,EAA2BG,EAAK,C,KCnB1B,MCYDK,EAAc5B,OAAO,iBACrB6B,EAAiB7B,OAAO,oBACxB8B,EAAe9B,OAAO,wBACtB+B,EAAc/B,OAAO,kBACrBgC,EAAYC,GAAwB,iBAARA,GAA4B,OAARA,GAAgC,mBAARA,EAgDxEC,EAAmB,IAAIC,IAAI,CAC7B,CAAC,QA7CwB,CACzBC,UAAYH,GAAQD,EAASC,IAAQA,EAAIL,GACzCS,UAAU3C,GACN,MAAM,MAAE4C,EAAK,MAAEC,GAAU,IAAIC,eAE7B,OADAC,EAAO/C,EAAK4C,GACL,CAACC,EAAO,CAACA,GACpB,EACAG,YAAYC,IACRA,EAAKC,QAuHFC,EAtHSF,EAsHO,GADTG,cAhFd,CAAC,QA/BwB,CACzBV,UAAYlC,GAAU8B,EAAS9B,IAAU6B,KAAe7B,EACxDmC,WAAU,MAAEnC,IACR,IAAI6C,EAcJ,OAZIA,EADA7C,aAAiBU,MACJ,CACToC,SAAS,EACT9C,MAAO,CACH+C,QAAS/C,EAAM+C,QACfC,KAAMhD,EAAMgD,KACZC,MAAOjD,EAAMiD,QAKR,CAAEH,SAAS,EAAO9C,SAE5B,CAAC6C,EAAY,GACxB,EACAL,YAAYK,GACR,GAAIA,EAAWC,QACX,MAAMxE,OAAO4E,OAAO,IAAIxC,MAAMmC,EAAW7C,MAAM+C,SAAUF,EAAW7C,OAExE,MAAM6C,EAAW7C,KACrB,MASJ,SAASuC,EAAO/C,EAAK2D,EAAKrC,MACtBqC,EAAGC,iBAAiB,WAAW,SAASC,EAASC,GAC7C,IAAKA,IAAOA,EAAGjC,KACX,OAEJ,MAAM,GAAEkC,EAAE,KAAEC,EAAI,KAAEC,GAASnF,OAAO4E,OAAO,CAAEO,KAAM,IAAMH,EAAGjC,MACpDqC,GAAgBJ,EAAGjC,KAAKqC,cAAgB,IAAIC,IAAIC,GACtD,IAAIC,EACJ,IACI,MAAMC,EAASL,EAAKM,MAAM,GAAI,GAAG/E,QAAO,CAACQ,EAAKC,IAASD,EAAIC,IAAOD,GAC5DwE,EAAWP,EAAKzE,QAAO,CAACQ,EAAKC,IAASD,EAAIC,IAAOD,GACvD,OAAQgE,GACJ,IAAK,MAEGK,EAAcG,EAElB,MACJ,IAAK,MAEGF,EAAOL,EAAKM,OAAO,GAAG,IAAMH,EAAcN,EAAGjC,KAAKrB,OAClD6D,GAAc,EAElB,MACJ,IAAK,QAEGA,EAAcG,EAASC,MAAMH,EAAQJ,GAEzC,MACJ,IAAK,YAGGG,EAAcK,EADA,IAAIF,KAAYN,IAGlC,MACJ,IAAK,WACD,CACI,MAAM,MAAEtB,EAAK,MAAEC,GAAU,IAAIC,eAC7BC,EAAO/C,EAAK6C,GACZwB,EA8HxB,SAAkBrE,EAAK2E,GAEnB,OADAC,EAAcC,IAAI7E,EAAK2E,GAChB3E,CACX,CAjIsC8E,CAASlC,EAAO,CAACA,GACnC,CACA,MACJ,IAAK,UAEGyB,OAAchG,EAElB,MACJ,QACI,OAKZ,CAFA,MAAOmC,GACH6D,EAAc,CAAE7D,QAAO,CAAC6B,GAAc,EAC1C,CACAhD,QAAQ0F,QAAQV,GACXW,OAAOxE,IACD,CAAEA,QAAO,CAAC6B,GAAc,MAE9B4C,MAAMZ,IACP,MAAOa,EAAWC,GAAiBC,EAAYf,GAC/CV,EAAG0B,YAAYvG,OAAO4E,OAAO5E,OAAO4E,OAAO,CAAC,EAAGwB,GAAY,CAAEnB,OAAOoB,GACvD,YAATnB,IAEAL,EAAG2B,oBAAoB,UAAWzB,GAClC0B,EAAc5B,GAClB,GAER,IACIA,EAAGT,OACHS,EAAGT,OAEX,CAIA,SAASqC,EAAcC,IAHvB,SAAuBA,GACnB,MAAqC,gBAA9BA,EAASC,YAAYjC,IAChC,EAEQkC,CAAcF,IACdA,EAASG,OACjB,CAIA,SAASC,EAAqBC,GAC1B,GAAIA,EACA,MAAM,IAAI3E,MAAM,6CAExB,CACA,SAASiC,EAAYQ,EAAIM,EAAO,GAAIb,EAAS,WAAc,GACvD,IAAI0C,GAAkB,EACtB,MAAMpB,EAAQ,IAAIqB,MAAM3C,EAAQ,CAC5BnE,IAAI+G,EAAS/F,GAET,GADA2F,EAAqBE,GACjB7F,IAASmC,EACT,MAAO,IACI6D,EAAuBtC,EAAI,CAC9BK,KAAM,UACNC,KAAMA,EAAKE,KAAK/C,GAAMA,EAAE8E,eACzBjB,MAAK,KACJM,EAAc5B,GACdmC,GAAkB,CAAI,IAIlC,GAAa,SAAT7F,EAAiB,CACjB,GAAoB,IAAhBgE,EAAKhD,OACL,MAAO,CAAEgE,KAAM,IAAMP,GAEzB,MAAMrE,EAAI4F,EAAuBtC,EAAI,CACjCK,KAAM,MACNC,KAAMA,EAAKE,KAAK/C,GAAMA,EAAE8E,eACzBjB,KAAKb,GACR,OAAO/D,EAAE4E,KAAKrD,KAAKvB,EACvB,CACA,OAAO8C,EAAYQ,EAAI,IAAIM,EAAMhE,GACrC,EACA4E,IAAImB,EAAS/F,EAAMuE,GACfoB,EAAqBE,GAGrB,MAAOtF,EAAO2E,GAAiBC,EAAYZ,GAC3C,OAAOyB,EAAuBtC,EAAI,CAC9BK,KAAM,MACNC,KAAM,IAAIA,EAAMhE,GAAMkE,KAAK/C,GAAMA,EAAE8E,aACnC1F,SACD2E,GAAeF,KAAKb,EAC3B,EACAK,MAAMuB,EAASG,EAAUC,GACrBR,EAAqBE,GACrB,MAAMO,EAAOpC,EAAKA,EAAKhD,OAAS,GAChC,GAAIoF,IAASlE,EACT,OAAO8D,EAAuBtC,EAAI,CAC9BK,KAAM,aACPiB,KAAKb,GAGZ,GAAa,SAATiC,EACA,OAAOlD,EAAYQ,EAAIM,EAAKM,MAAM,GAAI,IAE1C,MAAOL,EAAciB,GAAiBmB,EAAiBF,GACvD,OAAOH,EAAuBtC,EAAI,CAC9BK,KAAM,QACNC,KAAMA,EAAKE,KAAK/C,GAAMA,EAAE8E,aACxBhC,gBACDiB,GAAeF,KAAKb,EAC3B,EACAmC,UAAUP,EAASI,GACfR,EAAqBE,GACrB,MAAO5B,EAAciB,GAAiBmB,EAAiBF,GACvD,OAAOH,EAAuBtC,EAAI,CAC9BK,KAAM,YACNC,KAAMA,EAAKE,KAAK/C,GAAMA,EAAE8E,aACxBhC,gBACDiB,GAAeF,KAAKb,EAC3B,IAEJ,OAAOM,CACX,CAIA,SAAS4B,EAAiBpC,GACtB,MAAMsC,EAAYtC,EAAaC,IAAIiB,GACnC,MAAO,CAACoB,EAAUrC,KAAKsC,GAAMA,EAAE,MALnBC,EAK+BF,EAAUrC,KAAKsC,GAAMA,EAAE,KAJ3DE,MAAMzG,UAAU0G,OAAOnC,MAAM,GAAIiC,KAD5C,IAAgBA,CAMhB,CACA,MAAM9B,EAAgB,IAAIiC,QAK1B,SAASnC,EAAM1E,GACX,OAAOlB,OAAO4E,OAAO1D,EAAK,CAAE,CAACkC,IAAc,GAC/C,CAQA,SAASkD,EAAY5E,GACjB,IAAK,MAAOgD,EAAMsD,KAAYtE,EAC1B,GAAIsE,EAAQpE,UAAUlC,GAAQ,CAC1B,MAAOuG,EAAiB5B,GAAiB2B,EAAQnE,UAAUnC,GAC3D,MAAO,CACH,CACIwD,KAAM,UACNR,OACAhD,MAAOuG,GAEX5B,EAER,CAEJ,MAAO,CACH,CACInB,KAAM,MACNxD,SAEJoE,EAAc3F,IAAIuB,IAAU,GAEpC,CACA,SAAS4D,EAAc5D,GACnB,OAAQA,EAAMwD,MACV,IAAK,UACD,OAAOxB,EAAiBvD,IAAIuB,EAAMgD,MAAMR,YAAYxC,EAAMA,OAC9D,IAAK,MACD,OAAOA,EAAMA,MAEzB,CACA,SAASyF,EAAuBtC,EAAIqD,EAAKrC,GACrC,OAAO,IAAItF,SAAS0F,IAChB,MAAMhB,EAeH,IAAI4C,MAAM,GACZM,KAAK,GACL9C,KAAI,IAAM+C,KAAKC,MAAMD,KAAKE,SAAWC,OAAOC,kBAAkBpB,SAAS,MACvEqB,KAAK,KAjBN5D,EAAGC,iBAAiB,WAAW,SAAS4D,EAAE1D,GACjCA,EAAGjC,MAASiC,EAAGjC,KAAKkC,IAAMD,EAAGjC,KAAKkC,KAAOA,IAG9CJ,EAAG2B,oBAAoB,UAAWkC,GAClCzC,EAAQjB,EAAGjC,MACf,IACI8B,EAAGT,OACHS,EAAGT,QAEPS,EAAG0B,YAAYvG,OAAO4E,OAAO,CAAEK,MAAMiD,GAAMrC,EAAU,GAE7D,CChSA,IAAI8C,EAEJ,SAASC,GAAQ,KAAEC,IAEjB,OADAF,EAAe,IAAIE,EACZ,EAAGC,kBACR,IACE,OAAOH,EAAaI,aAAaD,EAKnC,CAJE,MAAOE,GAGP,OAFAC,QAAQC,IAAI,iDAAmDF,GAC/DL,EAAe,IAAIE,EACZM,KAAKC,UAAU,CAACC,WAAY,EAAGC,OAAQ,iDAAmDN,GACnG,EAEJ,CA4BA,EAAe,CACbO,SA3BFC,iBACE,IAAKC,EAAcC,SAAqBnJ,QAAQC,IAAI,CAClD,WACE,MAAMiJ,QAAqB,6BAE3B,aADMA,EAAaE,UACZf,EAAQa,EAChB,EAJD,GAKA,WAEE,SF3Bk8C,OAACD,IAAU,IAAI,MAAM,oBAAoBxF,iBAAgB,IAAKA,gBAAgBF,MAAMyC,YAAY,IAAIqD,kBAAkB,IAAIC,YAAYC,SAASzJ,EAAoB,CAAjB,MAAMA,GAAG,OAAM,CAAE,CAAE,EAArK,CAAuK,IAAI0J,WAAW,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,ME2BtrD,OACxB,MAAML,QAAoB,6BAK1B,aAFMA,EAAYC,gBACZD,EAAYM,eAAeC,UAAUC,qBACpCtB,EAAQc,EAChB,EATD,KAYF,OAAO,EAAc,CACnBD,eACAU,kBAAmBT,EACnBA,eAEJ,CAGYU,I","sources":["webpack://lurk-web-repl/webpack/bootstrap","webpack://lurk-web-repl/webpack/runtime/define property getters","webpack://lurk-web-repl/webpack/runtime/ensure chunk","webpack://lurk-web-repl/webpack/runtime/get javascript chunk filename","webpack://lurk-web-repl/webpack/runtime/global","webpack://lurk-web-repl/webpack/runtime/hasOwnProperty shorthand","webpack://lurk-web-repl/webpack/runtime/make namespace object","webpack://lurk-web-repl/webpack/runtime/publicPath","webpack://lurk-web-repl/webpack/runtime/importScripts chunk loading","webpack://lurk-web-repl/./node_modules/wasm-feature-detect/dist/esm/index.js","webpack://lurk-web-repl/./node_modules/comlink/dist/esm/comlink.mjs","webpack://lurk-web-repl/./js/wasm-worker.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t34: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunklurk_web_repl\"] = self[\"webpackChunklurk_web_repl\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { threads } from 'wasm-feature-detect';\nimport * as Comlink from 'comlink';\n\nvar replInstance;\n// Run wasm-bindgen exports (the Lurk REPL).\nfunction runLurk({ Repl }) {\n  replInstance = new Repl();\n  return ({ textContent }) => {\n    try {\n      return replInstance.execute_lurk(textContent);\n    } catch (err) {\n      console.log('An error has occured, resetting engine state: ' + err);\n      replInstance = new Repl();\n      return JSON.stringify({iterations: 0, result: 'An error has occured, resetting engine state: ' + err});\n    }\n  };\n}\n\nasync function initHandlers() {\n  let [singleThread, multiThread] = await Promise.all([\n    (async () => {\n      const singleThread = await import('../pkg/index.js');\n      await singleThread.default();\n      return runLurk(singleThread);\n    })(),\n    (async () => {\n      // If threads are unsupported in this browser, skip this handler.\n      if (!(await threads())) return;\n      const multiThread = await import(\n        '../pkg/index.js'\n      );\n      await multiThread.default();\n      await multiThread.initThreadPool(navigator.hardwareConcurrency);\n      return runLurk(multiThread);\n    })()\n  ]);\n\n  return Comlink.proxy({\n    singleThread,\n    supportsThreads: !!multiThread,\n    multiThread\n  });\n}\n\nComlink.expose({\n  handlers: initHandlers()\n});"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","b","self","installedChunks","i","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","data","chunkIds","moreModules","runtime","pop","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","port","start","createProxy","target","serialized","isError","message","name","stack","assign","ep","addEventListener","callback","ev","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","rawValue","apply","proxy","transfers","transferCache","set","transfer","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","_target","requestResponseMessage","toString","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","Array","concat","WeakMap","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","replInstance","runLurk","Repl","textContent","execute_lurk","err","console","log","JSON","stringify","iterations","result","handlers","async","singleThread","multiThread","default","SharedArrayBuffer","WebAssembly","validate","Uint8Array","initThreadPool","navigator","hardwareConcurrency","supportsThreads","initHandlers"],"sourceRoot":""}